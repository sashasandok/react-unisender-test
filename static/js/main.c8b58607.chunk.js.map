{"version":3,"sources":["serviceWorker.ts","api/apiClient.ts","api/user.ts","mappers/user.ts","mappers/detailedUser.ts","utils/paging.ts","redux/actions/users.ts","redux/reducers/user.ts","redux/reducers/index.ts","hooks/useFetch.ts","components/Card/Card.tsx","components/CardList/CardList.tsx","pages/CardsListPage/CardsListPage.tsx","components/DetailedCard/DetailedCard.tsx","pages/DetailedCardPage/DetailedCardPage.tsx","components/NotFound/NotFound.tsx","pages/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","apiUrl","endpoint","headers","Accept","get","args","fetch","getEndpointStr","method","then","response","json","argStr","Object","keys","key","slice","name","user","id","avatarUrl","avatar_url","eventsUrl","events_url","followersUrl","followers_url","followingUrl","following_url","gistsUrl","gists_url","gravatarId","gravatar_id","htmlUrl","html_url","login","nodeId","node_id","organizationsUrl","organizations_url","receivedEventsUrl","received_events_url","reposUrl","repos_url","siteAdmin","site_admin","starredUrl","starred_url","subscriptions_url","type","url","subscriptionsUrl","company","blog","email","hireable","bio","publicRepos","public_repos","publicGists","public_gists","followers","following","createdAt","created_at","updatedAt","updated_at","divideToPages","items","pageCount","pages","pageNumber","length","splice","actions","createActions","request","x","complete","error","getByName","setPage","setUser","getUsers","dispatch","a","apiData","data","users","map","userMapper","console","log","message","handleActions","state","isFetching","payload","page","combineReducers","routing","routerReducer","useFetch","someFetchActionCreator","useDispatch","useEffect","Card","props","className","to","src","alt","rel","target","href","Button","content","basic","Divider","CardList","UserList","useSelector","Container","textAlign","style","background","paddingTop","minHeight","Pagination","activePage","onPageChange","e","scrollTo","top","behavior","totalPages","marginTop","DetailedCard","moment","format","DetailedCardPage","userName","params","username","userData","userDetailedMapper","padding","onClick","NotFound","App","basename","process","exact","path","component","CardsListPage","middleware","thunk","devMiddleware","logger","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c8b58607.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const apiBaseUrl = 'https://api.github.com/'\n\nconst apiUrl = (endpoint: string) => apiBaseUrl + endpoint\n\nconst headers = {\n\tAccept: 'application/json',\n\t'Content-Type': 'application/json',\n}\n\n// get\nexport const get = (endpoint: string, { ...args }) =>\n\tfetch(apiUrl(getEndpointStr(endpoint, args)), {\n\t\tmethod: 'GET',\n\t\theaders: headers,\n\t}).then((response) => response.json())\n\n// post\nexport const post = (endpoint: string, { ...args }) =>\n\tfetch(apiUrl(endpoint), {\n\t\tmethod: 'POST',\n\t\theaders: headers,\n\t\tbody: JSON.stringify(args),\n\t}).then((response) => response.json())\n\n// put\nexport const put = (endpoint: string, { ...args }, token: string) =>\n\tfetch(apiUrl(endpoint), {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t...(token && { Authorization: `Bearer ${token}` }),\n\t\t},\n\t\tbody: JSON.stringify(args),\n\t}).then((response) => response.json())\n\n// del\nexport const del = (endpoint: string, id: any, token: string) =>\n\tfetch(apiUrl(`${endpoint}/${id}`), {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t...(token && { Authorization: `Bearer ${token}` }),\n\t\t},\n\t}).then((response) => response.status === 200)\n\n// get endpoint string\nconst getEndpointStr = (endpoint: string, args: any) => {\n\tlet argStr = '?'\n\tfor (let key of Object.keys(args)) {\n\t\targStr = `${argStr}${key}=${args[key]}&`\n\t}\n\n\treturn endpoint + argStr.slice(0, -1)\n}\n","import { get } from './apiClient'\n\nexport default {\n\tgetUsers: () => get('users', {}),\n\tgetUserByName: (name: string) => get(`users/${name}`, {}),\n}\n","import { MapperUserData } from '../interfaces'\n\nexport default (user: MapperUserData) => {\n\treturn {\n\t\tid: user.id,\n\t\tavatarUrl: user.avatar_url,\n\t\teventsUrl: user.events_url,\n\t\tfollowersUrl: user.followers_url,\n\t\tfollowingUrl: user.following_url,\n\t\tgistsUrl: user.gists_url,\n\t\tgravatarId: user.gravatar_id,\n\t\thtmlUrl: user.html_url,\n\t\tlogin: user.login,\n\t\tnodeId: user.node_id,\n\t\torganizationsUrl: user.organizations_url,\n\t\treceivedEventsUrl: user.received_events_url,\n\t\treposUrl: user.repos_url,\n\t\tsiteAdmin: user.site_admin,\n\t\tstarredUrl: user.starred_url,\n\t\tsubscriptions_url: user.subscriptions_url,\n\t\ttype: user.type,\n\t\turl: user.url,\n\t}\n}\n","import { MapperDetailedUserData } from '../interfaces'\n\nexport default (user: MapperDetailedUserData) => {\n\treturn {\n\t\tlogin: user.login,\n\t\tid: user.id,\n\t\tnodeId: user.node_id,\n\t\tavatarUrl: user.avatar_url,\n\t\tgravatarId: user.gravatar_id,\n\t\turl: user.url,\n\t\thtmlUrl: user.html_url,\n\t\tfollowersUrl: user.followers_url,\n\t\tfollowingUrl: user.following_url,\n\t\tgistsUrl: user.gists_url,\n\t\tstarredUrl: user.starred_url,\n\t\tsubscriptionsUrl: user.subscriptions_url,\n\t\torganizationsUrl: user.organizations_url,\n\t\treposUrl: user.repos_url,\n\t\teventsUrl: user.events_url,\n\t\treceivedEventsUrl: user.received_events_url,\n\t\ttype: user.type,\n\t\tsiteAdmin: user.site_admin,\n\t\tname: user.name,\n\t\tcompany: user.company,\n\t\tblog: user.blog,\n\t\tlocation: user.location,\n\t\temail: user.email,\n\t\thireable: user.hireable,\n\t\tbio: user.bio,\n\t\tpublicRepos: user.public_repos,\n\t\tpublicGists: user.public_gists,\n\t\tfollowers: user.followers,\n\t\tfollowing: user.following,\n\t\tcreatedAt: user.created_at,\n\t\tupdatedAt: user.updated_at,\n\t}\n}\n","export const divideToPages = (items: [], pageCount: number) => {\n\tconst pages = {} as any\n\tlet pageNumber = 1\n\twhile (items.length) {\n\t\tpages[pageNumber] = items.splice(0, pageCount)\n\t\tpageNumber++\n\t}\n\n\treturn pages\n}\n","import { createActions } from 'redux-actions'\nimport apiData from '../../api/user'\nimport userMapper from '../../mappers/user'\nimport userDetailedMapper from '../../mappers/detailedUser'\nimport { divideToPages } from '../../utils/paging'\n\nexport const PAGE_COUNT = 5\n\nconst actions = createActions<any>({\n\tget: {\n\t\trequest: (x) => x,\n\t\tcomplete: (x) => x,\n\t\terror: (x) => x,\n\t},\n\tgetByName: {\n\t\trequest: (x) => x,\n\t\tcomplete: (x) => x,\n\t\terror: (x) => x,\n\t},\n\tsetPage: (x) => x,\n\tsetUser: (x) => x,\n}) as any\n\nexport default actions\n\nexport const getUsers = () => async (dispatch: any) => {\n\tdispatch(actions.get.request())\n\n\ttry {\n\t\tconst data = await apiData.getUsers()\n\t\tconst users = data.map(userMapper)\n\t\tconst pages = divideToPages(users, PAGE_COUNT)\n\n\t\tdispatch(\n\t\t\tactions.get.complete({\n\t\t\t\tusers: pages,\n\t\t\t}),\n\t\t)\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\tdispatch(actions.get.error(e.message))\n\t}\n}\n\nexport const getUserByName = (name: string) => async (dispatch: any) => {\n\tdispatch(actions.getByName.request())\n\n\ttry {\n\t\tconst userData = await apiData.getUserByName(name)\n\t\tconst user = userDetailedMapper(userData)\n\n\t\tdispatch(\n\t\t\tactions.getByName.complete({\n\t\t\t\tuser,\n\t\t\t}),\n\t\t)\n\t} catch (e) {\n\t\tconsole.log(e)\n\t\tdispatch(actions.getByName.error(e.message))\n\t}\n}\n\nexport const setPage = ({ page }: any) => async (dispatch: any) => {\n\tdispatch(actions.setPage({ page }))\n}\n\nexport const setUser = (data: any) => async (dispatch: any) => {\n\tdispatch(actions.setUser({ user: data }))\n}\n","import { handleActions } from 'redux-actions'\nimport actions from '../actions/users'\n\nexport const initialState = {\n\tusers: [],\n\tisFetching: false,\n\terror: '',\n\tpage: 1,\n\tuser: {},\n}\n\nexport default handleActions<any>(\n\t{\n\t\t[actions.get.request]: (state: any) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: true,\n\t\t\t\terror: '',\n\t\t\t}\n\t\t},\n\n\t\t[actions.get.complete]: (state: any, { payload }: any) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\tusers: payload.users,\n\t\t\t\t[payload.page]: payload.users,\n\t\t\t}\n\t\t},\n\n\t\t[actions.get.error]: (state: any, { payload }: any) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\terror: payload.error,\n\t\t\t}\n\t\t},\n\n\t\t[actions.setPage]: (state, { payload }) => ({\n\t\t\t...state,\n\t\t\tpage: payload.page,\n\t\t}),\n\n\t\t[actions.getByName.request]: (state: any) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: true,\n\t\t\t\terror: '',\n\t\t\t}\n\t\t},\n\n\t\t[actions.getByName.complete]: (state: any, { payload }: any) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\tuser: payload.user,\n\t\t\t}\n\t\t},\n\n\t\t[actions.getByName.error]: (state: any, { payload }: any) => {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: false,\n\t\t\t\terror: payload.error,\n\t\t\t}\n\t\t},\n\n\t\t[actions.setUser]: (state, { payload }) => ({\n\t\t\t...state,\n\t\t\tuser: payload.user,\n\t\t}),\n\t},\n\tinitialState,\n)\n","import { combineReducers } from 'redux'\nimport { routerReducer } from 'react-router-redux'\n\nimport user from './user'\n\nexport default combineReducers({\n\trouting: routerReducer,\n\tuser,\n})\n","import { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\n\nexport const useFetch = (someFetchActionCreator: Function) => {\n\tconst dispatch = useDispatch()\n\tuseEffect(() => {\n\t\tdispatch(someFetchActionCreator())\n\t}, [dispatch])\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Divider, Button } from 'semantic-ui-react'\nimport './Card.css'\n\ntype UserData = {\n\tid: number\n\tlogin: string\n\thtmlUrl: string\n\tavatarUrl: string\n}\n\nconst Card: React.FC<UserData> = (props) => {\n\treturn (\n\t\t<div key={props.id} className=\"card-layout\">\n\t\t\t<div className=\"card-content\">\n\t\t\t\t<Link className=\"user-info\" to={`/users/${props.login}`}>\n\t\t\t\t\t<img src={props.avatarUrl} alt=\"\" className=\"user-image\" />\n\t\t\t\t\t<p>{props.login}</p>\n\t\t\t\t</Link>\n\t\t\t\t<a rel=\"noopener norefferer\" target=\"blank\" href={props.htmlUrl}>\n\t\t\t\t\t<Button content=\"User Link\" basic />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t<Divider />\n\t\t</div>\n\t)\n}\n\nexport default Card\n","import React from 'react'\nimport { UserData } from '../../interfaces'\nimport Card from '../Card/Card'\nimport './CardList.css'\n\ntype CardListProps = {\n\tusers: UserData[]\n}\n\nconst CardList: React.FC<CardListProps> = (props) => {\n\tconst { users } = props\n\treturn (\n\t\t<div className=\"card-list\">\n\t\t\t{users &&\n\t\t\t\tusers.map((user: UserData) => (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={user.id}\n\t\t\t\t\t\tid={user.id}\n\t\t\t\t\t\tlogin={user.login}\n\t\t\t\t\t\thtmlUrl={user.htmlUrl}\n\t\t\t\t\t\tavatarUrl={user.avatarUrl}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</div>\n\t)\n}\n\nexport default CardList\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { getUsers, setPage } from '../../redux/actions/users'\nimport { useFetch } from '../../hooks/useFetch'\nimport { useDispatch } from 'react-redux'\nimport CardList from '../../components/CardList/CardList'\nimport { CardListProps } from '../../types'\nimport { Container, Pagination } from 'semantic-ui-react'\n\nconst UserList: React.FC<CardListProps> = () => {\n\tconst dispatch = useDispatch()\n\n\tuseFetch(getUsers)\n\n\tconst data = useSelector((state: any) => {\n\t\treturn {\n\t\t\tusers: state.user.users,\n\t\t\tpage: state.user.page,\n\t\t}\n\t})\n\tconst { users, page } = data\n\n\tconst onPaginationChange = (e: any, { activePage }: any) => {\n\t\tdispatch(setPage({ page: activePage }))\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tbehavior: 'smooth',\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\ttextAlign=\"justified\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: 'white',\n\t\t\t\t\tpaddingTop: '20px',\n\t\t\t\t\tminHeight: '70vh',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<CardList users={users[page]} />\n\t\t\t</Container>\n\t\t\t<Pagination\n\t\t\t\tactivePage={page}\n\t\t\t\tonPageChange={onPaginationChange}\n\t\t\t\ttotalPages={5}\n\t\t\t\tstyle={{ marginTop: '25px' }}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport default UserList\n","import React from 'react'\nimport { DetailedCardProps } from '../../types'\nimport moment from 'moment'\nimport './DetailedCard.css'\n\nconst DetailedCard: React.FC<DetailedCardProps> = (props) => {\n\treturn (\n\t\t<>\n\t\t\t{props.user && (\n\t\t\t\t<div className=\"detailed-user\">\n\t\t\t\t\t<img src={props.user.avatarUrl} alt=\"\" />\n\t\t\t\t\t<div className=\"user-detailed-info\">\n\t\t\t\t\t\t<p className=\"user-name\">{props.user.name}</p>\n\t\t\t\t\t\t<p className=\"user-location\">{props.user.location}</p>\n\t\t\t\t\t\t<p className=\"user-date\">\n\t\t\t\t\t\t\tFrom {moment(props.user.createdAt).format('DD/MM/YYYY')}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default DetailedCard\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUserByName, setUser } from '../../redux/actions/users'\nimport { useFetch } from '../../hooks/useFetch'\nimport DetailedCard from '../../components/DetailedCard/DetailedCard'\nimport { DetailedCardProps } from '../../types'\nimport { Container } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst DetailedCardPage: React.FC<DetailedCardProps> = (props: any) => {\n\tconst dispatch = useDispatch()\n\n\tconst userName = props.match.params.username as string\n\tuseFetch(() => getUserByName(userName))\n\tconst user = useSelector((state: any) => state.user.user)\n\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\ttextAlign=\"justified\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: 'lightgray',\n\t\t\t\t\tpadding: '80px 130px',\n\t\t\t\t\tminHeight: '92vh',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Link to=\"/\" onClick={() => dispatch(setUser({}))}>\n\t\t\t\t\tto home\n\t\t\t\t</Link>\n\t\t\t\t<DetailedCard user={user} />\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\nexport default DetailedCardPage\n","import React from 'react'\nimport './NotFound.css'\n\nconst NotFound: React.FC = () => {\n\treturn (\n\t\t<div className=\"not-found-wrapper\">\n\t\t\t<p>Page was not found - 404</p>\n\t\t</div>\n\t)\n}\n\nexport default NotFound\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CardsListPage from '../pages/CardsListPage/CardsListPage'\nimport DetailedCardPage from '../pages/DetailedCardPage/DetailedCardPage'\nimport NotFound from '../components/NotFound/NotFound'\n\nimport './App.css'\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={CardsListPage} />\n\t\t\t\t\t<Route exact path=\"/users/:username\" component={DetailedCardPage} />\n\t\t\t\t\t<Route exact path=\"*\" component={NotFound} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// react\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\n// redux\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { logger } from 'redux-logger'\nimport { Provider } from 'react-redux'\nimport reducers from './redux/reducers'\n// components\nimport App from './pages/App'\n// styles\nimport './index.css'\nimport 'semantic-ui-css/semantic.min.css'\n\ndeclare global {\n\tinterface Window {\n\t\t__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\n\t}\n}\n\nconst middleware = [thunk]\nconst devMiddleware = [logger]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n\treducers,\n\tcomposeEnhancers(applyMiddleware(...[...middleware, ...devMiddleware])),\n)\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}